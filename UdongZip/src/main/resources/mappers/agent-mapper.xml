<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="agentMapper">

	<resultMap id="agentResultSet" type="agent">
		<result column="AGENT_NO" property="agentNo"/>
		<result column="AGENT_ID" property="agentId"/>
		<result column="AGENT_PWD" property="agentPwd"/>
		<result column="AGENT_NAME" property="agentName"/>
		<result column="AGENT_EMAIL" property="agentEmail"/>
		<result column="AGENT_PHONE" property="agentPhone"/>
		<result column="AGENT_ADDRESS" property="agentAddress"/>
		<result column="INTRODUCE" property="introduce"/>
		<result column="PERMISSION" property="permission"/>
		<result column="COMPANY_NO" property="companyNo"/>
		<result column="CEO_NAME" property="ceoName"/>
		<result column="DOCUMENT1" property="document1"/>
		<result column="DOCUMENT2" property="document2"/>
	</resultMap>
	
	<select id="agentIdCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM AGENT
		 WHERE AGENT_ID = #{agentId}
	</select>
	
	<select id="agentEmailCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM AGENT
		 WHERE AGENT_EMAIL = #{email}
	</select>
	
	<insert id="insertAgent" parameterType="agent">
		INSERT INTO AGENT(AGENT_NO, AGENT_ID, AGENT_PWD, AGENT_NAME, AGENT_PHONE, AGENT_EMAIL, AGENT_ADDRESS, INTRODUCE, COMPANY_NO, CEO_NAME, DOCUMENT1, DOCUMENT2)
		VALUES(SEQ_AGE.NEXTVAL, #{agentId}, #{agentPwd}, #{agentName}, #{agentPhone}, #{agentEmail}, #{agentAddress}, #{introduce}, #{companyNo}, #{ceoName}, #{document1}, #{document2})
	</insert>

	<select id="loginAgent" parameterType="string" resultMap="agentResultSet">
		SELECT *
		  FROM AGENT
		 WHERE AGENT_ID = #{agentId}
		   AND STATUS = 'Y'
	</select>
	
	<update id="updateAgent" parameterType="agent">
		UPDATE AGENT
		   SET AGENT_EMAIL = #{agentEmail}
		     , AGENT_PHONE = #{agentPhone}
		     , AGENT_ADDRESS = #{agentAddress}
		     , INTRODUCE = #{introduce}
		 WHERE AGENT_NO = #{agentNo}
		   AND STATUS = 'Y'
	</update>
	
	<select id="selectAgent" parameterType="_int" resultMap="agentResultSet">
		SELECT *
		  FROM AGENT
		 WHERE AGENT_NO = #{agentNo}
		   AND STATUS = 'Y'
	</select>
	
	<update id="deleteAgent" parameterType="_int">
		UPDATE AGENT
		   SET STATUS = 'N'
		 WHERE AGENT_NO = #{agentNo}
		   AND STATUS = 'Y'
	</update>
	
	 <!-- id로 회원 조회: 비밀버호 재설정용 -->
 	<select id="findPwd" parameterType="string" resultMap="agentResultSet">
 		SELECT *
 		  FROM AGENT
 		 WHERE AGENT_ID = #{agentId}
 		   AND STATUS = 'Y'
 	</select>
 	
 	<!-- 비밀번호 변경 -->
 	<update id="updatePwd" parameterType="agent">
 		UPDATE AGENT
 		   SET AGENT_PWD = #{agentPwd}
 		 WHERE AGENT_NO = #{agentNo}
 	</update>
 	
	<!-- 업체 회원 전체 조회 -->
	<select id="selectAgentList" parameterType="hashmap" resultMap="agentResultSet">
		SELECT *
		FROM AGENT
		<!-- 미승인 업체인 경우 -->
		<if test="classification == 'permission'">
			WHERE PERMISSION = 'N'
		</if>
		<!-- 키워드 검색인 경우 -->
		<if test="classification == 'keyword'">
			WHERE UPPER(AGENT_ID) LIKE '%' || UPPER(#{keyword}) || '%' OR UPPER(AGENT_NAME) LIKE '%' || UPPER(#{keyword}) || '%'
		</if>
	</select>
	
	<!-- 업체 회원 전체 조회 수 -->
	<select id="selectListCount" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*)
		FROM AGENT
		<!-- 미승인 업체인 경우 -->
		<if test="classification == 'permission'">
			WHERE PERMISSION = 'N'
		</if>
		<!-- 키워드 검색인 경우 -->
		<if test="classification == 'keyword'">
			WHERE UPPER(AGENT_ID) LIKE '%' || UPPER(#{keyword}) || '%' OR UPPER(AGENT_NAME) LIKE '%' || UPPER(#{keyword}) || '%'
		</if>
	</select>
	
	<!-- 업체 회원 가입 승인, 탈퇴 처리 -->
	<update id="adminUpdate" parameterType="agent">
		UPDATE AGENT
		SET 
		<choose>
			<when test="identifier == 'signUp'">
				PERMISSION = 'Y'
			</when>
			<otherwise>
				STATUS = 'N'
			</otherwise>
		</choose>
		WHERE AGENT_NO = #{agentNo}
	</update>

</mapper>